name: Deploy to dev after merge
on:
  pull_request:
    types:
      - closed

jobs:
  Run-Salto-Deployment:
    if: github.event.pull_request.merged == true
    runs-on: ubuntu-latest
    steps:             
      - name: Checkout repo
        uses: actions/checkout@v3

      - name: Install Salto CLI
        run: |
          curl https://cli.salto.io/release/1/linux-x64.tar.gz --output linux-x64.tar.gz
          tar xvzf linux-x64.tar.gz

      - name: Run Deploy to DEV
        env: 
          SALTO_API_TOKEN: ${{ secrets.SALTO_API_TOKEN }}
          GITHUB_TOKEN: ${{ secrets.GWR_GH_TOKEN }}
        run: |
          depl_id=$(gh pr view ${{ github.event.pull_request.number }} --json comments -q '.comments[0].body') 
          
          #save the deployment ID to a file so I can use it in the next step
          echo "$depl_id" > deployment_id.txt  
          
          ./salto-cloud deployment deploy -i $depl_id 

      - name: Create Deployment in UAT
        env: 
          SALTO_API_TOKEN: ${{ secrets.SALTO_API_TOKEN }}
          GITHUB_TOKEN: ${{ secrets.GWR_GH_TOKEN }}
        run: |
          depl_id="$(cat deployment_id.txt)"   # get deployment ID from previous step

          # interestingly, we could use 'from-pull-request' here instead.  think about this, could help with merge conflict?
          ./salto-cloud deployment create from-deployments \
            -E ${{vars.SALTO_UAT_ENV}} \
            -i $depl_id \
            -n "${{github.event.pull_request.title}}"  # *** improve the naming scheme, look in vars context variable

