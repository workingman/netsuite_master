name: Deploy to dev after merge
on:
  pull_request:
    types:
      - closed

jobs:
  Run-Salto-Deployment:
    if: github.event.pull_request.merged == true
    runs-on: ubuntu-latest
    steps:             
      - name: Checkout repo
        uses: actions/checkout@v3
       

      - name: Install Salto CLI
        run: |
          curl https://cli.salto.io/release/1/linux-x64.tar.gz --output linux-x64.tar.gz
          tar xvzf linux-x64.tar.gz

      - name: Run Deploy
        run: |

          # This variable was created during the preceding workflow when the Salto deployment was created. 
          # It contains a list of branch:deploymentID pairs for all active branches
          cat << EOF > tmpfile
          ${{vars.SALTO_DEPL_ID}}
          EOF

          # NB: in the context of this workflow, github.event.pull_request.head.ref contains the right name. 
          #     in the context of the pull_request, github.head_ref will contain that same information
          depl_id=$(grep "${{github.event.pull_request.head.ref}}" tmpfile | sed -e 's/^${{github.event.pull_request.head.ref}}\://')
          
          ./salto-cloud deployment deploy -i $depl_id

          # clean up vars.SALTO_DEPL_ID so it doesn't grow forever
          body=$(grep -v "${{github.event.pull_request.head.ref}}" tmpfile)
          gh variable set SALTO_DEPL_ID --body "$body"

          # create the same deployment in UAT
          ./salto-cloud deployment create from-deployments -E ${{vars.SALTO_UAT_ENV}} -i $depl_id

        env: 
          SALTO_API_TOKEN: ${{ secrets.SALTO_API_TOKEN }}
          GITHUB_TOKEN: ${{ secrets.GWR_GH_TOKEN }}
